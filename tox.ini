# For more information about tox, see https://tox.readthedocs.io/en/latest/
[tox]
minversion = 3.18.0
envlist =
    lint
    packaging
    py
    py-devel

# do not enable skip missing to avoid CI false positives
skip_missing_interpreters = false
isolated_build = true
requires =
    pip >= 20.3

[testenv]
description = Unit testing
basepython = python3
usedevelop = true
# download assures tox gets newest pip, see https://github.com/tox-dev/tox/issues/791
download = true
commands =
    # failsafe as pip may install incompatible dependencies
    pip check
    # failsafe for broken installation
    molecule --version
    # failsafe for preventing changes that may break pytest collection
    python -m pytest -p no:cov --collect-only
    python -m pytest {posargs:-l}
setenv =
    ANSIBLE_CONFIG={toxinidir}/.ansible.cfg
    ANSIBLE_VERBOSITY={env:ANSIBLE_VERBOSITY:1}
    PIP_CONSTRAINT = {toxinidir}/requirements.txt
    devel: PIP_CONSTRAINT=/dev/null
    PIP_DISABLE_PIP_VERSION_CHECK=1
    PY_COLORS={env:PY_COLORS:1}
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
    # This should pass these args to molecule, no effect here as this is the default
    # but it validates that it accepts extra params.
    MOLECULE_OPTS=--destroy always
passenv =
    CI
    CURL_CA_BUNDLE
    GITHUB_*
    HOME
    PATH
    PYTEST_*
    REQUESTS_CA_BUNDLE
    SSH_AUTH_SOCK
    SSL_CERT_FILE
    TOXENV
    TWINE_*
    USER
deps =
    ansible >= 2.9
    !devel: molecule[test] >= 3.4.0
    devel: git+https://github.com/ansible-community/molecule.git@main#egg=molecule[test]

[testenv:lint]
description = Runs all linting tasks
# python pinned in order to have pip-compile output reproducible
basepython = python3.8
skip_install = true
setenv =
  {[testenv]setenv}
  PIP_CONSTRAINT = /dev/null
deps =
    pre-commit >= 2.15.0
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}

[testenv:packaging]
description = Build package, verify metadata and installation
skip_install = true
deps =
    build >= 0.7.0
    twine  # pyup: ignore
setenv =
allowlist_externals =
    rm
    sh
commands_pre =
    # ensure dist/ folder is empty
    rm -rfv {toxinidir}/dist/
commands =
    # build wheel and sdist using PEP-517
    {envpython} -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
commands_post =
    # metadata validation
    twine check --strict {toxinidir}/dist/*
    # install the wheel
    sh -c "{envpython} -m pip install {toxinidir}/dist/*.whl"
    # basic sanity check
    molecule --version
    # uninstall package
    pip uninstall -y molecule-lxd

[testenv:deps]
description = Bump all test dependencies
skip_install = true
deps = {[testenv:lint]deps}
setenv = {[testenv:lint]setenv}
commands =
  # manual hook calls the optional pip-compile-upgrade hook after pip-compile
  {[testenv:lint]commands} --hook-stage manual pip-compile
