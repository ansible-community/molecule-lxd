# For more information about tox, see https://tox.readthedocs.io/en/latest/
[tox]
minversion = 3.18.0
envlist =
    lint
    packaging
    py{36,37,38,39,310}
    py{36,37,38,39,310}-{devel}

# do not enable skip missing to avoid CI false positives
skip_missing_interpreters = False
isolated_build = True

[testenv]
description =
    Unit testing
usedevelop = True
# download assures tox gets newest pip, see https://github.com/tox-dev/tox/issues/791
download = true
extras = test
commands =
    # failsafe as pip may install incompatible dependencies
    pip check
    # failsafe for broken installation
    molecule --version
    # failsafe for preventing changes that may break pytest collection
    python -m pytest -p no:cov --collect-only
    python -m pytest {posargs:-l}
setenv =
    ANSIBLE_FORCE_COLOR={env:ANSIBLE_FORCE_COLOR:1}
    ANSIBLE_INVENTORY={toxinidir}/tests/hosts.ini
    ANSIBLE_CONFIG={toxinidir}/.ansible.cfg
    ANSIBLE_NOCOWS=1
    ANSIBLE_RETRY_FILES_ENABLED=0
    ANSIBLE_STDOUT_CALLBACK={env:ANSIBLE_STDOUT_CALLBACK:debug}
    ANSIBLE_VERBOSITY={env:ANSIBLE_VERBOSITY:0}
    PIP_DISABLE_PIP_VERSION_CHECK=1
    PY_COLORS={env:PY_COLORS:1}
    # pip: Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
    PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
    PYTHONDONTWRITEBYTECODE=1
    # This should pass these args to molecule, no effect here as this is the default
    # but it validates that it accepts extra params.
    MOLECULE_OPTS=--destroy always
passenv =
    CI
    CURL_CA_BUNDLE
    GITHUB_*
    HOME
    PATH
    PYTEST_*
    REQUESTS_CA_BUNDLE
    SSH_AUTH_SOCK
    SSL_CERT_FILE
    TOXENV
    TWINE_*
    USER
deps =
    ansible >= 2.9
    py{36,37,38,39,310}-{!devel}: molecule[test]>=3.4.0
    py{36,37,38,39,310}-{devel}: git+https://github.com/ansible-community/molecule.git@main#egg=molecule[test]
allowlist_externals =
    bash
    twine
    pytest
    pre-commit
    rm
    sh

[testenv:lint]
description = Runs all linting tasks
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps = pre-commit>=1.18.1
extras =
skip_install = true
usedevelop = false
[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
deps =
    build >= 0.7.0
    twine >= 3.2.0  # pyup: ignore
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    sh -c "python -m twine check --strict {toxinidir}/dist/*"
